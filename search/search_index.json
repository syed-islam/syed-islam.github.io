{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Syed's Home","text":""},{"location":"#life-at-present","title":"Life at present","text":"<p> I am currently an Executive Director (Principal Cybersecurity Architect) working in Cyber Security and Technology Controls for JP Morgan Chase. I am also a member of the Industrial Advisory Board for Queen Mary University. </p> <p>My wife and I have two beautiful boys - Arzaan and Afaan who take up nearly all our time outside of work. </p> <p>If you would like to get in touch with me, please use one of the following email addresses or one of the social media handles:</p> <ul> <li><code>syed.islam.10[at]ucl.ac.uk</code></li> <li><code>syed.islam.ucl[at]gmail.com</code></li> </ul>"},{"location":"#work-experience","title":"Work Experience","text":"<p>I previously worked as/at:</p> <ul> <li>Vice President (Data Architect) at JP Morgan Chase.</li> <li>Associate (Information Architect) at JP Morgan Chase.</li> <li>Programme Leader &amp; Senior Lecturer (Associate Professor) at University of East London.</li> <li>Chief Architect at AvasUnion UK.</li> <li>Research Associate at CHIME, University College London.</li> <li>Research Associate at CREST, University College London.</li> <li>Integration Engineer at Intercontinental Exchange (ICE Link) London.</li> <li>Graduate Teaching Assistant at University College London. </li> <li>Graduate Teaching Assistant at King's College London.</li> <li>Consultant Ornate i System, London.</li> <li>Consultant at KernelSoft, Dhaka. </li> <li>Lecturer at Brac University, Dhaka.</li> </ul>"},{"location":"#education","title":"Education","text":"<p>I previously studied:</p> <ul> <li>PhD. Advanced Computing Research at University College London.</li> <li>MSc. Advanced Software Engineering at King's College London.</li> <li>BSc. Computer Science and Computer Networking at London Metropolitan University.</li> </ul>"},{"location":"#certifications","title":"Certifications","text":"<p>I also have the following certifications:</p> <ul> <li>AWS Solutions Architect Associate (SAA) </li> <li>Cisco Certified Network Associate (CCNA)</li> <li>Graduate Certificate in Academic Practices (GCAP)</li> <li>Postgraduate Certificate in Learning and Teaching in Higher Education</li> </ul>"},{"location":"awards/","title":"Awards and Achievements","text":"<ul> <li>Nominated for every UEL Student Union Awards 2017-18 category applicable to teaching staff - \"The Imaginative Thinker Award for creative teaching\", \"The Word of Wisdom award for academic advising\", \"The Personal Maestro award for most valuable supervision\", \"The Guiding Star award for most effective feedback\" and \"The Extra Mile award for inspirational teaching\". </li> <li>A student's Thank You message.</li> <li>In Sep '17, our paper on Tree-Oriented vs. Line-Oriented Observation-Based Slicing at the International Working Conference on Source Code Analysis and Manipulation was given the best paper award. Photo</li> <li>In Sep '17, our team (Dr Usman Naeem and I) won the UEL Teaching and Learning Awards for Curriculum Innovation worth \u00a31,000 for our re-structuring and innovation of the curriculum for Undergraduate Projects. [Event Videos and Photos]</li> <li>In Apr '16, I received \u00a32,500 funding under the UEL Internship Program.</li> <li>In Mar '16, I received Microsoft Azure Grant ($20,000) for research into improving the techniques for energy measurement of cloud software.</li> <li>In May '14, I received Microsoft Azure Grant ($40,000) for research into improving current program slicing techniques and deployment of parallel-ORBS to the cloud infrastructure.</li> <li>Awarded grant from Overseas Research Student Award Scheme and Graduate Scholarships to undertake fully funded PhD at King's College London. This was later transferred to University College London.</li> <li>Highest teaching evaluation marks from student surveys 2008, department of computer science, Brac University.</li> <li>\u00a36,000 Scholarship awarded by King's College London during my Masters.</li> <li>Highest Overall Mark, Computer Science Graduate 05/06, London Metropolitan University.</li> <li>Best Overall Mark, Extended Degree 05/06, London Metropolitan University.</li> <li>Multiple Merit Scholarships of \u00a32000 each for outstanding performance during BSc.</li> </ul>"},{"location":"event-videos-photo/","title":"University of East London (UEL) Teaching Awards","text":""},{"location":"event-videos-photo/#event-video","title":"Event Video","text":""},{"location":"event-videos-photo/#event-pictures","title":"Event Pictures","text":""},{"location":"publication/","title":"Publications","text":""},{"location":"publication/#journal-articles","title":"Journal Articles","text":"<ul> <li>Kingsley Okoye, Syed Islam, Usman Naeem and MHD Saeed Sharif Semantic-based process mining technique for annotation and modelling of domain processes.. The International Journal of Innovative Computing, Information and Control, January 2020. [PDF] \u00a9 Elsevier, 2020. DOI:</li> <li>Seongmin Lee, David Binkley, Nicolas Gold, Syed Islam, Jens Krinke and Shin Yoo: Evaluating lexical approximation of program dependence. Journal of Systems and Software, [PDF] \u00a9 Elsevier, 2020. DOI: 10.1016/j.jss.2019.110459</li> <li>David Binkley, Nicolas Gold, Syed Islam, Jens Krinke and Shin Yoo: A Comparison of Tree- and Line-Oriented Observational Slicing. Empirical Software Engineering, 1--37 [PDF] \u00a9 Springer, 2019. DOI: 10.1007/s10664-018-9675-9</li> <li>Kingsley Okoye, Usman Naeem, Syed Islam, Abdel-Rahman H. Tawil &amp; Elyes Lamine: Process Models Discovery and Traces Classification: a Fuzzy-BPMN Mining Approach.Journal of International Technology and Information Management (JITIM) - online, 2018. [PDF] \u00a9 IIMA, 2018. ISSN:</li> <li>Isibor Ihianle, Usman Naeem, Syed Islam and Abdel-Rahman Tawil: A Hybrid approach to Recognising Activities of Daily. Informatics - Special Issue : Sensor-Based Activity Recognition and Interaction, 2018 [PDF] \u00a9 MDPI Press, 2018. DOI:</li> <li>Isibor Ihianle, Usman Naeem, Syed Islam and Abdel-Rahman Tawil: Recognising Activities of Daily Living from Patterns of Object Use. International Journal of Hybrid intelligent Systems (IJHIS), 14(3): 2018. [PDF] \u00a9 IOS Press, 2018. DOI:</li> <li>Pusp Joshi, Shareeful Islam and Syed Islam: A Framework for Cloud Based E-Government from the Perspective of Developing Countries. Future Internet, 80(9): 2017. [PDF] \u00a9 MDPI, 2017. DOI: 10.3390/fi9040080 </li> <li>Kingsley Okoye, Usman Naeem and Syed Islam: Semantic Fuzzy Mining: Enhancement of process models and event logs analysis from Syntactic to Conceptual Level. International Journal of Hybrid Intelligent System, 14(1): 2017. [PDF] \u00a9 IOS Press, 2017. DOI: 10.3233/HIS-170243</li> <li>Muhammad Ehatisham-ul-Haq, Muhammad Awais Azam, Jonathan Loo, Kai Shuang, Syed Islam, Usman Naeem and Yasar Amin: Authentication of Smartphone Users Based on Activity Recognition and Mobile Sensing. Sensors, 17(9): 2017. [PDF] \u00a9 MDPI AG, 2017. DOI: 10.3390/s17092043</li> <li>B. de Bono, M. Helvensteijn, N. Kokash, I. Martorelli, D. Sarwar, S. Islam, P. Grenon and P. Hunter: Requirements for the formal representation of pathophysiology mechanisms by clinicians. Interface Focus, 6(2): 2016, p.20150099. [PDF] \u00a9 The Royal Society Publishing, 2016. DOI: 10.1098/rsfs.2015.0099</li> <li>S. Islam, J. Krinke, D. Binkley and M. Harman: Coherent Clusters in Source Code. Journal of Systems and Software, 88: February 2014. [PDF] \u00a9 Open Access, 2014. DOI: 10.1016/j.jss.2013.07.040</li> <li>D. Binkley, N. Gold, M. Harman, S. Islam, J. Krinke and Z. Li: Efficient identification of linchpin vertices in dependence clusters. ACM Transactions on Programming Languages and Systems (TOPLAS), 35(2): July 2013. [PDF] \u00a9 ACM, 2013. DOI: 10.1145/2491522.2491524</li> <li>D. Binkley, M. Harman, Y. Hassoun, S. Islam, Z. Li: Assessing the Impact of Global Variables on Program Dependence and Dependence Clusters. Journal of Systems and Software, 83(1) January, 2010. [PDF] \u00a9 Elsevier, 2010. DOI: 10.1016/j.jss.2009.03.03 </li> </ul>"},{"location":"publication/#conferences","title":"Conferences","text":"<ul> <li>Usman Naeem, Syed Islam and Arish Siddiqui: Improving Student Engagement and Performance in Computing Final Year Projects. IEEE International Conference on Teaching, Assessment, and Learning for Engineering, December 2019. [PDF] \u00a9 IEEE, 2019.</li> <li>Mahin Talukder, Syed Islam and Paolo Falcarin: Analysis of Obfuscated Code with Program Slicing. Cyber Science, June 2019. [PDF] \u00a9 IEEE, 2019. DOI: </li> <li>Usman Naeem, Syed Islam and Arish Siddiqui: An Effective Framework for Enhancing Student Engagement and Performance in Final Year Projects. IEEE Global Engineering Education Conference (EDUCON2019), April 2019. [PDF] \u00a9 IEEE, 2019. DIO: </li> <li>Syed Islam, Kingsley Okoye, Usman Naeem, Saeed Sharif, Muhammad Awais Azam and Amin Karami: The Application of a Semantic-Based Process Mining Framework on a Learning Process Domain. Intelligent Systems Conference (IntelliSys) 2018, September 2018. [PDF] \u00a9 IEEE, 2018. DOI:</li> <li>Isibor IHIANLE, Syed Islam, Usman Naeem, Saeed Sharif, Muhammad Awais Azam and Amin Karami: Intelligent Recognition of Activities of Daily Living from Patterns of Object Use. Intelligent Systems Conference (IntelliSys) 2018, September 2018. [PDF] \u00a9 IEEE, 2018. DOI:</li> <li>Saeed Sharif, Usman Naeem, Syed Islam and Amin Karami,: Functional Connectivity Evaluation for Infant EEG Signals Based on Artificial Neural Network. Intelligent Systems Conference (IntelliSys) 2018, September 2018. [PDF] \u00a9 IEEE, 2018. DOI:</li> <li>Isibor Kennedy Ihianle, Usman Naeem and Syed Islam: Knowledge Driven Activity Recognition from Patterns of Object Use. 5th Activity Monitoring by Multiple Distributed Sensing Workshop AMMDS 2017, September 2017. [PDF] \u00a9 BVMC, 2017. DOI:</li> <li>Dave Binkley, Nicolas Gold, Mark Harman, Syed Islam, Jens Krinke and Shin Yoo: Tree-Oriented vs. Line-Oriented Observation-Based Slicing. International Working Conference on Source Code Analysis and Manipulation, September 2017. [PDF] \u00a9 IEEE, 2017. DOI: Best Paper Award</li> <li>Kingsley Okoye, Usman Naeem, Syed Islam, Abdel-Rahman H. Tawil and Elyes Lamine: Process Models Discovery: A Fuzzy-BPMN Mining Approach. In Smart Systems for Complex Problems 2017, Chapter: 13, pp. 17, 2017. [PDF] \u00a9 IIMA/ICITED Joint Conference, 2017. ISBN: 978-1-64136-046-3</li> <li>Syed Islam, Mhd Saeed Sharif, Usman Naeem and James Geehan: SignalSense - Towards Quality Service. International Workshop on Intelligent Personal Support of Human Behavior, September 2017. [PDF] \u00a9 ACM, 2017. DOI:</li> <li>Syed Islam, Usman Naeem, Mhd Saeed Sharif and Arnold Dovnarovic: CrimeSafe - Helping you stay safe. International Workshop on Intelligent Personal Support of Human Behavior, September 2017. [PDF] \u00a9 ACM, 2017. DOI:</li> <li>Usman Naeem, Syed Islam, Mhd Saeed Sharif, Sergey Sudakov and M. Awais Azam: Taskification - Gamification of Tasks. International Workshop on Intelligent Personal Support of Human Behavior, September 2017. [PDF] \u00a9 ACM, 2017. DOI:</li> <li>Isibor Kennedy Ihianle, Usman Naeem, and Syed Islam: Ontology-Driven Activity Recognition from Patterns of Object Use. International Workshop on Intelligent Personal Support of Human Behavior, September 2017. [PDF] \u00a9 ACM, 2017. DOI:</li> <li>Nicolas Gold, David Binkley, Mark Harman, Syed Islam, Jens Krinke and Shin Yoo: Generalized Observational Slicing for Tree-Represented Modelling Languages. Symposium on the Foundations of Software Engineering September 2017. [PDF] \u00a9 ACM, 2017. DOI:</li> <li>Nigar Jebraeil, Adel Noureddine, Joseph Doyle, Syed Islam and Rabih Bashroush: gUML: Reasoning about Energy at Design Time by Extending UML Deployment Diagrams with Data Centre Contextual Information. IEEE SERVICES2017 Emerging Technology Track June 2017. [PDF] \u00a9 IEEE, 2017. DOI:</li> <li>Joseph Doyle, Syed Islam, Rabih Bashroush and Donal O'Mahony: Cloud Strife: Expanding the Horizons of Cloud Gaming Services. IEEE Services 2017 Research Track June 2017. [PDF] \u00a9 IEEE, 2017. DOI:</li> <li>Kingsley Okoye, Abdel-Rahman Tawil, Usman Naeem, Syed Islam and Elyes Lamine: Using Semantic-based Approach to Manage Perspectives of Process Mining: Application on Improving Learning Process Domain Data. IEEE International Conference on Big Data (Big Data), December 2016. [PDF] \u00a9 IEEE, 2016. DOI:</li> <li>Kingsley Okoye, Abdel-Rahman Tawil, Usman Naeem, Syed Islam and Elyes Lamine: Semantic-based Model Analysis towards Enhancing Information Values of Process Mining: Case Study of Learning Process Domain. International Conference on Soft Computing and Pattern Recognition, Vellore, India, December 2016. [PDF] \u00a9 Springer, 2016. DOI:</li> <li>Yibiao Yang, Mark Harman, Jens Krinke, Syed Islam, David Binkley, Yuming Zhou, Baowen Xu: An Empirical Study on Dependence Clusters for Effort-Aware Fault-Proneness Prediction. International Conference on Automated Software Engineering, Singapore, September 2016. [PDF] \u00a9 ACM, 2016. DOI:</li> <li>Umar Ismail, Syed Islam, Shareeful Islam: Towards Cloud Security Monitoring: A Case Study. Cybersecurity and Cyberforensics Conference, Jordan, August 2016. [PDF] \u00a9 IEEE, 2016. DOI:</li> <li>Bernard de Bono, Michiel Helvensteijn, Natallia Kokash, Irene Martorelli,Dewan Sarwar, Syed Islam, Pierre Grenon, S. Randall Thomas, Peter Hunter: ApiNATOMY: Physiology knowledge integration over circuitboards of functional anatomy. Virtual Physiological Human Conference (VPH), Amsterdam, Netherlands, September 2016. [PDF] \u00a9 VPH, 2016. DOI:</li> <li>Adel Noureddine, Syed Islam and Rabih Bashroush: Jolinar: Analysing the energy footprint of Software Applications. International Symposium on Software Testing and Analysis (ISSTA), Saarland, Germany, July 2016. [PDF] \u00a9 ACM, 2016. DOI:</li> <li>Syed Islam, Adel Noureddine and Rabih Bashroush: Measuring Energy Footprint of Software Features. IEEE International Conference on Program Comprehension (ICPC), Austin, USA, May 2016. [PDF] \u00a9 IEEE, 2016. DOI:</li> <li>Syed Islam and David Binkley: PORBS: A Parallel Observation-based Slicer. IEEE International Conference on Program Comprehension (ICPC), Austin, USA, May 2016. [PDF] \u00a9 IEEE, 2016. DOI:</li> <li>D. Binkley, A Beszedes, S. Islam, J. Jasz and B. Vancsics: Uncovering Dependence Clusters and Linchpin Functions. International Conference on Software Maintenance and Evolution (ICSME), Bremen, Germany, 2015. [PDF] \u00a9 IEEE, 2015. DOI:</li> <li>David Binkley, Nicolas Gold, Mark Harman, Syed Islam, Jens Krinke, and Shin Yoo: ORBS and the Limits of Static Slicing. International Working Conference on Source Code Analysis and Manipulation (SCAM), Bremen, Germany, 2015. [PDF] \u00a9 IEEE, 2015. DOI:</li> <li>D. Binkley, N. Gold, M. Harman, S. Islam, J. Krinke, S. Yoo: ORBS: Language-Independent Program Slicing. Foundations of Software Engineering (FSE), Hong Kong, China, November 2014. [PDF] \u00a9 ACM, 2014. DOI: 10.1145/2635868.2635893</li> <li>M. Harman, S. Islam, Y. Jia, L. Minku, F. Sarro and K. Srivisut: Less is more: Temporal fault predictive performance over multiple Hadoop releases. Symposium on Search-Based Software Engineering SSBSE 2014, Fortaleza, Brazil, August 2014. [PDF] \u00a9 Springer International Publishing, 2014. DOI: 10.1007/978-3-319-09940-8_19</li> <li>S. Islam, J. Krinke, D. Binkley: Dependence Clusters Visualization. 5th ACM/IEEE Symposium on Software Visualization, Salt Lake City, Utah, USA, October 2010. [PDF] \u00a9 ACM, 2010. DOI: 10.1145/1879211.1879227</li> <li>S.Islam, J. Krinke, D. Binkley, M. Harman: Coherent Dependence Clusters. ACM SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering, Toronto, Ontario, Canada, June 2010. [PDF] \u00a9 ACM, 2010. DOI: 10.1145/1806672.1806683</li> </ul>"},{"location":"publication/#book-chapters","title":"Book Chapters","text":"<ul> <li>Kingsley Okoye, Syed Islam, and Usman Naeem, 2017; Ontology: Core Process Mining and Querying Enabling Tool. In: C. Thomas, Editor. Ontology in Information Science, ISBN - 978-953-51-5354-2, InTech Publishers. 2018.</li> </ul>"},{"location":"publication/#theses","title":"Theses","text":"<ul> <li>Syed Islam: Coherent Dependence Clusters. Thesis, PhD. Advanced Computing Research, University College London, July 2014. Examiners: Tracy Hall, Brunel University London, and Wolfgang Emmerich, University College London. [PDF] 187 pages.</li> <li>Syed Islam: Dependence Cluster Analysis. Thesis, MSc. Advanced Software Engineering, King's College London, September 2007. Examiners: Mark Harman, King's College London, and Iman Poernomo, King's College London. [PDF] 181 pages.</li> </ul>"},{"location":"academia/admin/","title":"Admin Roles","text":"Role Organization Programme Leader, MSc Computer Science University of East London MSc. Dissertation Coordinator, MSc. Dissertation University of East London Member, School Research Degree Sub-committee, ACE University of East London Deputy Manager, Crest Open Workshop University College London Study Tour Leader, Submarine cable station &amp; Weather stations Brac University Event Organizer, World Cyber Games Brac University Coach, Cisco National Competition Brac University Academic Resource Planner, Department of Computer Science Brac University Faculty Advisor, Brac University Computer Club Brac University Committee Member, Department of Computer Science Brac University"},{"location":"academia/affiliations/","title":"Affiliations to Academic Institutions","text":"<ul> <li>University College London - UCL Computer Science </li> <li>King's College London - Department of Informatics </li> <li>Queen Mary University - School of Electronic Engineering and Computer Science</li> <li>University of East London - School OF Architecture, Computing and Engineering</li> <li>BRAC University - Department of Computer Science and Engineering</li> <li>UCL Centre for Research on Evolution, Search and Testing (CREST)</li> </ul>"},{"location":"academia/cv/","title":"Academic CV","text":"<p>Coming soon...</p>"},{"location":"academia/phd_examination/","title":"PhD Examination","text":""},{"location":"academia/phd_examination/#phd-awarding-viva-voce","title":"PhD Awarding Viva-voce","text":"Candidate Name Thesis Title Year Nigar Jebrailli Ease: Energy Aware Software Engineering 2017 Ahmed Alzahrani Enhanced learning of computer programming in university through collaboration using multi-touch tools 2017"},{"location":"academia/phd_examination/#phd-panels","title":"PhD Panels","text":"Candidate Name Panel Type Year Sanjeewa Jayathilake Annual Review 2017 Chris Moore Annual Review 2017 Abdul Pramanik MPhil/PhD Transfer 2017 Abrar Khan MPhil/PhD Transfer 2017 Comfort Oyede MPhil/PhD Transfer 2016 Eoin woods Annual Review 2016 Daniel Schatz Annual Review 2016 Abel Yeboah-Ofori Annual Review 2016"},{"location":"academia/supervision/","title":"Supervision","text":""},{"location":"academia/supervision/#phd","title":"PhD","text":"Candidate Name Institution Thesis Title Rasha Haridh University of East London Developing an Ontology-Driven Careflow Management System to Support the Process of Homecare for Elderly People with Chronic Diseases. Isibor Ihianle University of East London A Knowledge Driven Activity Recognition Framework Enhanced Using Topic Model. Umar Ismail University of East London Cloud Security Audit And Transparency Framework For Building Enterprise Trust. Kingsley Okoye University of East London A Semantic Rule-Based Approach Supported by Process Mining for Personalised Adaptive Learning. Mahin Talukder University of East London Effective Software Protection. Eoin Woods University of East London Aligning and Integrating Software Architecture Practice and Representation with Software Implementation. Pusp Joshi University of East London A Cloud Based G2G electronic government framework from the perspectives of Nepal. Charles Obi University of East London Assessing security risk for the migration of legacy systems into Cloud in SME\u2019s. Hassan Kassir University of East London Evolution of Software Architecture Sociology."},{"location":"academia/supervision/#professional-doctorate","title":"Professional Doctorate","text":"Candidate Name Institution Thesis Title Charles Obi University of East London Evolutionary Computing for Data Mining and Knowledge Discovery"},{"location":"academia/supervision/#bachelors","title":"Bachelors","text":"Supervisee Name Project Title Completion Year Sarah Hassan Network Assistant Tool 2017 Suleman Khalid Automated Forex Trading System 2017 Suprim Shrestha MyDrone - A mobile application for users to advertise and rent Drones 2017 Cyrille Hounvio Instant Messaging with Automatic Translation 2017 Khalid Owfar NutriPortion 2017 Julian Job Baffoe Ethical and Social Implications on Social Media on Academic Performance 2016 Krystian Blaszkowicz Accessible wireless network sensors using mobile phones 2016 Jerrel Anthony Nicholas Malware Detection 2016 Oyedeji Jimoh Oyetunde Programming Tools for School Children 2016"},{"location":"academia/teaching/","title":"Teaching","text":""},{"location":"academia/teaching/#university-of-east-london","title":"University of East London","text":"<ul> <li>MSc Dissertation</li> <li>Undergraduate Final Year Project</li> <li>Introduction to Computer Systems and Network</li> <li>Computing in Practice</li> <li>Advanced Software Engineering</li> <li>Advanced Programming</li> <li>Introduction to Software Development</li> </ul>"},{"location":"academia/teaching/#university-college-london","title":"University College London","text":"<ul> <li>Algorithmics</li> <li>Tools and Environments</li> </ul>"},{"location":"academia/teaching/#kings-college-london","title":"King's College London","text":"<ul> <li>Programming Applications</li> <li>Data Structures</li> <li>Introduction to Artificial Intelligence</li> <li>Practical Experiences of Programming</li> <li>Programming Practices</li> </ul>"},{"location":"academia/teaching/#brac-university","title":"BRAC University","text":"<ul> <li>Operating Systems</li> <li>Microporcessors</li> <li>Programming for Business</li> <li>Introduction to Programming</li> <li>Data Communications</li> <li>Computer Networks</li> </ul>"},{"location":"academia/teaching/#london-victoria-college-uk","title":"London Victoria College UK","text":"<ul> <li>Information Systems</li> <li>Software Development</li> <li>Computer and Network Technologies</li> <li>Object Oriented Programming</li> <li>Systems Analysis and Design</li> </ul>"},{"location":"academia/teaching/#stamford-college-uk","title":"Stamford College UK","text":"<ul> <li>Information Systems</li> <li>Software Development</li> <li>Computer and Network Technologies</li> <li>Object Oriented Programming</li> <li>Software Engineering</li> <li>Systems Analysis and Design</li> </ul>"},{"location":"notes/aws-dva/introduction/","title":"Introduction","text":"<p>This section will contain my study notes for the AWS Developer Associate Exam. </p>"},{"location":"notes/aws-dva/introduction/#resource-list","title":"Resource List","text":""},{"location":"notes/aws-practitioner/domains/","title":"Domains covered in the Exam","text":"<ol> <li>Cloud Concepts</li> <li>Security and Compliance</li> <li>Technology - CORE AWS services</li> <li>Billing and Pricing</li> </ol>"},{"location":"notes/aws-practitioner/domains/#cloud-concepts","title":"Cloud Concepts","text":"<p><code>Cloud Computing</code> :   Cloud computing is a remote virtual pool of on-demand shared resources offering to compute, storage, database and network services that can be rapidly deployed at scale.</p> <p><code>Resources Types</code> :   Compute, Storage, Database and Network.</p> <p><code>Cloud model types</code> :   Public Cloud, Private Cloud, Hybrid Cloud. These are differentiated based on Security, Data Location, Capital Expenditure, Operational Expenditure and Tenancy.</p> <p><code>Cloud Service Models</code> :   Infrastructure as a Service (IaaS), Software as a Service (SaaS) - Gmail, Platform as a Service (PaaS) -</p> <p><code>Dedicated Host</code> :   Choose instance placement, visibility of cores and sockets, meets licensing needs. </p> <p><code>Dedicated Instance</code> : More costly than shared, uses dedicated hardware without the visibility. </p> <p><code>High Availability</code> :   Replication across multiple geographical zones. </p>"},{"location":"notes/aws-practitioner/domains/#benefits-of-cloud","title":"Benefits of Cloud:","text":"<ol> <li>On-demand</li> <li>Scalibility</li> <li>Economy of Scale</li> <li>Flexibility &amp; Scalibility</li> <li>Growth</li> <li>Utility based metering</li> </ol>"},{"location":"notes/aws-practitioner/domains/#use-cases-for-cloud-computing","title":"Use cases for Cloud Computing:","text":"<ul> <li>Traffic Bursting</li> <li>Backup and Disaster Recovery</li> <li>Test and Dev environments. </li> <li>Proof of Concepts. </li> <li>Big Data and Data Manipulation</li> </ul>"},{"location":"notes/aws-practitioner/domains/#faq","title":"FAQ","text":"<ol> <li>Dedicated Instance vs Dedicated Host. </li> </ol>"},{"location":"notes/aws-practitioner/domains/#network-infrastructure","title":"Network Infrastructure","text":"<ol> <li>VPC - Virtual Private Cloud (Virtual Networks)</li> <li></li> </ol>"},{"location":"notes/aws-practitioner/domains/#questions","title":"Questions","text":""},{"location":"notes/aws-practitioner/introduction/","title":"Introduction","text":"<p>This section will contain my study notes for the AWS Practitioner Exam. In particular these are my notes for preparing for CLF-C01.</p>"},{"location":"notes/aws-practitioner/introduction/#resource-list","title":"Resource List","text":"Resource Name Description Links Cloud Academy AWS Cloud Practitioner Certificate Preparation Learning Path Cloud Academy"},{"location":"research/cloud-security/","title":"Automated Security Transparency","text":""},{"location":"research/cloud-security/#overview","title":"Overview","text":"<p> Automated Security Transparency Tool (ATT) is our automated security transparency tool. ATT is written in Java which makes it highly portable and platform independent. Figure on the right shows the system architecture of ATT. The main tasks performed by various components of the tool are to read ACR specification and generate a security matrix, enable logging of the resource interactions, monitors resource interactions, identify violations against the security matrix and send notifications in the event of violations.</p> <p>The current version of ATT is able to parse ACR statements written in ASRL . ATT provides options for importing plain text files containing ASRL and provides significant feedback on syntax errors in order to aid resolve any specification errors. Once a specification file is successfully parsed, ATT generates an in-memory security matrix corresponding to the file. This security matrix is vital to the monitoring operation.</p> <p>Following creation of the security matrix, the tool interfaces with the user interaction logging component and starts the logging process. As an initial implementation, we used LoggedFS as our logging system. LoggedFS is a FUSE based filesystem which can log every operation to the underlying file system in real-time and as it happens. Once the logging process is enabled, any request for interaction to monitored resources generates a detailed logged entry which is consumed directly by ATT enabling real-time usage monitoring. The monitoring is done against security matrix and any violation of defined ACRs or attempted breach is identified.</p>"},{"location":"research/cloud-security/#att-download","title":"ATT Download","text":"Download Link Description ATT ATT Distribution."},{"location":"research/cloud-security/#system-requirements","title":"System Requirements","text":""},{"location":"research/cloud-security/#java-requirements","title":"Java Requirements","text":"<p>Java_1_8 is required to run ATT.</p> <p>Fortunately, its quiet easy to get it running on Linux even without root. Just do the following:</p> <ol> <li>Download the JDK as a tarball from Oracle</li> <li>Unzip it somewhere in your HOME (for instance,\u2006HOME/jdk).</li> <li>Set JAVA_HOME to the path of the root JDK install</li> </ol> <p>For example,  1. <code>export JAVA_HOME=/cs/research/crest/home0/sislam/opt/jre1.8.0_65</code>  2. <code>export PATH=\"$JAVA_HOME/bin:$PATH\"</code></p> <p>The current version of ATT is also limited to Linux Distributions as it requires supporting tools which are detailed below.</p>"},{"location":"research/cloud-security/#utility-requirements","title":"Utility Requirements","text":"<p>You need to have the following tools installed on your machine:  1. FUSE  2. LoggedFS</p> <p>Most Linux Distribution will come with FUSE. On Ubuntu you can use the following commands to install FUSE:</p> <pre><code>  sudo apt-get update\n  sudo apt-get install librlog-dev libfuse-dev libxml2-dev libpcre3-dev\n</code></pre> <p>If Loggedfs is included in your distribution you can just install with your package manager. Otherwise follow instructions at LoggedFS website to install from source.</p>"},{"location":"research/cloud-security/#troubleshooting-and-help","title":"Troubleshooting and Help","text":"<p>If you are having trouble running the tool or need any help with installation please contact me.</p>"},{"location":"research/fastfix/","title":"Search-based Software Engineering (SBSE)","text":""},{"location":"research/fastfix/#fastfix-automated-bug-triage","title":"FastFix - Automated Bug Triage","text":""},{"location":"research/fastfix/#overview","title":"Overview","text":"<p>This page provides all the datasets and the tools for building the sum-based developer-term association matrix and using it for performing bug assignments.</p> <p>The work here is supported by EU project FITTEST (ICT-2009.1.2 no 257574) and EU project FastFix (FP7- 258109).</p> <p>We would also like to thank SFT and the ATLAS team at CERN for making the data available to us.</p>"},{"location":"research/fastfix/#bug-report-data","title":"Bug Report Data","text":""},{"location":"research/fastfix/#combined-dataset","title":"Combined Dataset","text":"<p>Please click link below to download sql dumps for all projects together.</p> <ul> <li>Filtered dataset containing bug reporting activity.</li> <li>Unfiltered dataset containing bug reporting activity.</li> </ul>"},{"location":"research/fastfix/#individual-datasets","title":"Individual Datasets","text":""},{"location":"research/fastfix/#filtered","title":"Filtered","text":"<ul> <li>Atlas</li> <li>Belle2</li> <li>Eclipse</li> <li>Unicase</li> </ul>"},{"location":"research/fastfix/#unfiltered","title":"Unfiltered","text":"<ul> <li>Atlas</li> <li>Belle2</li> <li>Eclipse</li> <li>Unicase</li> </ul>"},{"location":"research/program-analysis/","title":"Program Analysis Projects","text":""},{"location":"research/program-analysis/#decluvi-dependence-cluster-visualisation","title":"deCluVi: Dependence Cluster Visualisation","text":""},{"location":"research/program-analysis/#overview","title":"Overview","text":"<p>deCluVi is a multi-level software cluster visualisation tool. The tool has two graph based visualizations B-SCG and the F-SCG. Four other views, starting with the most abstract are the heat-map view, system view, line view and finally the code view. The tool is designed to be interactive and each of these views are presented in its window for ease in comparison and to maximize available screen space. Sliders and quick snap buttons allow quick selection of particular and a range of clusters. Dynamic coloring, range filtering and dead code elimination options make it easier to visualize and understand the software clusters. A paper on cluster visualization gives more detail about the tool.</p> <p>The tool and the data set for visualising many GNU programs are given below. The scheme scripts for extracting data from CodeSurfer is also provided if you wish to analyze other programs. After starting the tool you will need to select the scheme output file which can be found in the source directory for each of the programs.</p>"},{"location":"research/program-analysis/#screen-shots","title":"Screen Shots","text":""},{"location":"research/program-analysis/#tool-download","title":"Tool Download","text":"<p>The current version of the deCluVi can be downloaded from here.</p> <p>Visualisation data for transformed versions of GNU programs for coverage based clustering:</p> <ul> <li>bc-1.06.tar.gz</li> <li>byacc-20100610.tar.gz</li> <li>cflow-1.3.tar.gz</li> <li>ed-1.2.tar.gz</li> </ul>"},{"location":"research/program-analysis/#scheme-script","title":"Scheme Script","text":"<p>The scheme script to extract slice data from Code Surfer can be downloaded from here. (Please note that the script is compatible with version 2.1 of Code Surfer)</p>"},{"location":"research/program-analysis/#observation-based-program-slicing-orbs","title":"Observation-based Program Slicing (ORBS)","text":""},{"location":"research/program-analysis/#overview_1","title":"Overview","text":"<p> Current slicing techniques cannot handle systems written in multiple programming languages. Observation-Based Slicing (ORBS) is a language-independent slicing technique capable of slicing multi-language systems, including systems which contain (third party) binary components. A potential slice obtained through repeated statement deletion is validated by observing the behaviour of the program: if the slice and original program behave the same under the slicing criterion, the deletion is accepted. The resulting slice is similar to a dynamic slice.</p> <p>We evaluate five variants of ORBS on ten programs of different sizes and languages showing that it is less expensive than similar existing techniques. We also evaluate it on bash and four other systems to demonstrate feasible large-scale operation in which a parallelised ORBS needs up to 82% less time when using four threads. The results show that an ORBS slicer is simple to construct, effective at slicing, and able to handle systems written in multiple languages without specialist analysis tools.</p>"},{"location":"research/program-analysis/#porbs-download","title":"PORBS Download","text":"<p>PORBS is currently distributed as JAR executable file. You can download any of the following which has the tool distribution along with the required scripts to build and execute the system being sliced. Each download comes with a README explaining how to run the example.</p> Download Link Description Example Multi-language System written in Java, Python and C. Setup to slice on variable dot. Sort Uniq Utility Sort and Uniq utility written in Java. Configure to slice with input file and option \"-s\" Sort Uniq Utility Sort and Uniq utility written in Java. Configure to slice with input file and option \"-u\" Word Count Word Count example, line 45, variable c. Word Count Word Count example, line 29, variable inword."},{"location":"research/program-analysis/#system-requirements","title":"System Requirements","text":""},{"location":"research/program-analysis/#java-requirements","title":"Java Requirements","text":"<p>Java_1_8 is required to run PORBS.</p> <p>Fortunately, its quiet easy to get it running on Linux even without root. Just do the following:</p> <ol> <li>Download the JDK as a tarball from Oracle</li> <li>Unzip it somewhere in your HOME (for instance,\u2006HOME/jdk).</li> <li>Set JAVA_HOME to the path of the root JDK install</li> </ol> <p>For example, <pre><code>export JAVA_HOME=/cs/research/crest/home0/sislam/opt/jre1.8.0_65\nexport PATH=\"$JAVA_HOME/bin:$PATH\"\n</code></pre></p>"},{"location":"research/program-analysis/#utility-requirements","title":"Utility Requirements","text":"<p>The compile and execute script will need the following to run correctly. Note that some specific systemm will have additional requirements. Please refer to README of the download for more details.</p> <p>For example,</p> <ol> <li><code>bash</code></li> <li><code>time</code></li> <li><code>timeout</code></li> <li><code>KILL</code></li> <li><code>md5sum</code></li> <li><code>sed</code></li> </ol> <p>Most Linux Distribution will come with these utilities installed as default.</p> <p>Mac OS</p> <p>MAC OS does not have these utilities installed by default. You have to either adapt the scripts or install the utilities.</p>"},{"location":"research/program-analysis/#troubleshooting-and-help","title":"Troubleshooting and Help","text":"<p>If you are having trouble running the tool or need any help with installation please contact me.</p>"},{"location":"research/program-analysis/#further-information","title":"Further Information","text":"<p>Further information about ORBS and the sequential ORBS slicing tool is available from the official ORBS Website.</p>"},{"location":"research/program-analysis/#energy-measurement-and-program-slicing","title":"Energy Measurement and Program Slicing","text":""},{"location":"research/program-analysis/#explanation-of-the-data-format","title":"Explanation of the data format","text":"<p>The intial dataset for the subject program can be downloaded from below. Each download gives you a tarball with roughly the following directory structure:</p>"},{"location":"research/program-analysis/#config","title":"config","text":"<ul> <li><code>setup.sh</code> - setup script for the project, should setup the project for execution. For example: <code>sh config/setup.sh</code> should setup the code in a directory called orig ready for execution and compilation.</li> <li><code>compile.sh</code> - compile script for the project. For example: <code>sh config/compile.sh orig</code> should compile the code in corresponding orig directory.</li> <li><code>execute.sh</code> - execute script for the project. For example: <code>sh config/execute.sh orig</code> should execute the code in corresponding orig directory and show output.</li> </ul>"},{"location":"research/program-analysis/#orig","title":"orig","text":"<p>Contains the original source files which of the subject program to be tested.</p>"},{"location":"research/program-analysis/#regression","title":"regression","text":"<p>Contains the output of the slicer. Each directory in regression is the resulting output of running the slicer on variable v in source file f at line l. For instance, in the program Example you will find the directory <code>regression/checker_java_14_dots-8</code>, where</p> <ul> <li><code>checker_java</code> - is the name of the file f</li> <li><code>14</code> - line number l</li> <li><code>dots</code> - variable v</li> <li><code>8</code> - window size for the slicing configuration (ignore this for now)</li> </ul>"},{"location":"research/program-analysis/#description-of-log-files","title":"Description of Log Files","text":"<p>The regression directory also contains the following log files which gives you detailed information about the execution of ORBS and how it progresses:</p> <ul> <li><code>orbs.log</code> - Contains the execution attempt that ORBS does at each line and the result of that execution effort.<ul> <li>Headers - The first part of the log file gives details of the version of the Parallel ORBS tool in use followed the the configuration specific to the execution.</li> <li>Scipts - This is followed by a copy of the compile, execute and the setup scripts in use during this execution</li> <li>Oracle - The line with the header <code>Oracle:</code> contains the md5sum of the output that ORBS is using as oracle and will try to match.</li> <li>Sanity Runs - The log file then includes <code>Sanity Run [X]</code> which are there to ensure that the oracle can be achieved by the ORBS framework.</li> <li>Marking Blank Lines as Deleted - The current version makes a pass over the entire file and marks all blank lines as deleted. <code>Marking blank lines as deleted</code> shows the lines removed from each file that ORBS is working with.</li> <li>Orbs Execution - This is followed by the ORBS execution and attempt at deletion of the lines and their outcome. The explanation of the line <code>I:1 F:checker.java L:14 DWS:2 D [14 13]</code> is as follows:<ul> <li><code>I:1</code> - <code>I</code> stands for iteration number. The <code>1</code> shows that this is iteration 1 for ORBS</li> <li><code>F:checker.java</code> - <code>F</code> stands for file name. <code>checker.java</code> is the file from which ORBS was attempting deletion</li> <li><code>L:14</code> - <code>L</code> stands for line number. <code>14</code> is the line number where the deletion attempt took place</li> <li><code>DWS:2</code> - <code>DWS</code> stands for Deletion Window Size. The number <code>2</code> indicates that deletion window size of 2 was successful and hence two lines were removed. DWS:0 would indicate no deletion was successful at this line.</li> <li><code>[14 13]</code> - Indicates the lines that were deleted. In this case lines <code>14</code> and <code>13</code> were successfully deleted and replaced with a blank line. Please note that this only shows up if there were lines that were successfully deleted by ORBS.</li> </ul> </li> <li>Statistics -  At the end statistics such as Total Compilation, Total Executions, Total Cached Compilations, Total Cached Executions, Lines Deleted and Total Lines are output.</li> </ul> </li> <li><code>DeletePattern.log</code> - This file prints a pattern of the removal that took place. The format of the file is as follows:<ul> <li>The first line of the log file indicates the order of the files which were operated on by ORBS.</li> <li>The second line is the line where ORBS makes a pass to mark all blank lines as removed.</li> <li>Each of the following rows represents an iteration of ORBS on the files.</li> <li>The symbol <code>|</code> is used to delimit the operation on each of the files.</li> <li>The symbol <code>-</code> represents unsuccessful attempt to remove line.</li> <li>The symbol <code>.</code> means line already removed in previous iteration.</li> <li>The symbols <code>a-z</code> represents number of removed lines. <code>a</code> means 1 line removed while <code>eeeee</code> means 5 lines removed.</li> </ul> </li> </ul>"},{"location":"research/program-analysis/#data-download","title":"Data Download","text":"<ul> <li>Example</li> <li>Word_Count_1</li> <li>Word_Count_2</li> </ul> <p>Apologies</p> <p>I realized that this naming convention above is quiet poor! Please excuse it for now and I will put in a fix with a more intuitive naming convention for the upcoming data.</p>"},{"location":"research/project_ideas/","title":"Project Ideas for Students","text":"<p>This page is dedicated to listing and describing a few of the project ideas that I have. Depending on the project they will be suitable for different levels of students from UG to PhDs.</p> <p>I am interested in supervising undergraduate and postgraduate projects. If you are interested in projects that are research oriented, have practical technical components to them and are related to software engineering, please feel free to contact me to discuss your ideas.</p> <p>I am also interested in PhD supervision in the fields of software engineering, dependence analysis, search-based software engineering and program analysis. I am also happy to co-supervise in other areas.</p> <p>You may want to look into my research interests or specific project ideas below to see if there is anything that is of interest to you.</p>"},{"location":"research/project_ideas/#areas-of-interest","title":"Areas of Interest","text":"<ul> <li>Software Engineering</li> <li>Software Development</li> <li>Machine Learning</li> <li>Program Analysis</li> <li>Code Metrics</li> <li>Static Analysis</li> <li>Dynamic Analysis</li> <li>Search-based Software Engineering</li> <li>Software Visualisation</li> </ul>"},{"location":"research/project_ideas/#project-topics","title":"Project Topics","text":"<p>Click on the links below to view details of topic.</p> Project Title Entailing Areas Annoying Captcha! Image processing, Speech processing How much code are you writing? Program Analysis, Software Metrics Web Portal for ORBS Web Application Development Improving slicing performance through binary masking Program Trasformation, Re-writing, Static Analysis, Dynamic Analysis Binary-level program Slicing Program Trasformation, Re-writing, Static Analysis, Dynamic Analysis, Binary Analysis Software Repository Mining Data mining, Software repository mining, Data Analysis, Software Metrics\\ App Store Mining Requirement Analysis, Next release problem, Data mining, Software repository mining, Data Analysis, Software Metrics Search-based Software Slicing  Search-based Software Engineering, Genetic Algorithm, Program Slicing, Static Analysis, Dynamic Analysis Path to riches - Algorithimic Trading Trading Algorithms, Automated Trading, Metatrader, High Performance Trading, Technical Analysis, Machine Learning, Evolutionary Algorithms Automated Bug Triage Machine Learning, Data Analysis, Natural Language Processing, Latent Dirichlet allocation, Support Vector Machine Automated Assessment Web Application Development, Sandboxing, Software Security, Plagiarism Detection, Clone Detection, Code Provenance Software Visualisation Software Visualisation, Web Systems Development, JavaScript, D3 Improving battery life on your phone Mobile App Development, Energy Measurement Energy Consumption in the Cloud Cloud Computing, Energy Measurement Smart Scheduling Evolutionary Algorithms, Genetic Algorithms, Machine Learning, Search-based Software Engineering, Hill Climbing, Scheduling, Web Application Development Smart Tokenized ORBS Program Trasformation, Re-writing, Static Analysis, Dynamic Analysis, Program Slicing Delta Orbsing Delta Debugging, Delta, Program Trasformation, Re-writing, Static Analysis, Dynamic Analysis, Program Slicing Brain Region Routing Problem Steiner Minimal Tree, Graph Theory, Networks, Shortest Path, Routing Problem, Web Application Development, Software Visualisation Anti-Money Laundering System Compliance, Natural Language Processing, NoSQL, Scrapping,"},{"location":"research/project_ideas/#annoying-captcha","title":"Annoying Captcha?","text":"<p>I regard Captcha's as the necessary evil. Modern web systems are littered with Captchas and they are required in many cases to avert bots that try to get into the system. However, there are some instances where I find them very annoying, I always wanted to look into breaking Captchas but never had the time.</p> <p>This project will look into the current techniques to breaking Captchas and extend the state of the art with techniques and tools for breaking captchas?</p>"},{"location":"research/project_ideas/#how-much-code-are-you-writing","title":"How much code are you writing?","text":"<p>Everyday programmers write code, but how much of the code written is actually new. For example, if you were write a small program in Java, can you actually write something that hasn't been written before? For instance consider the following program:</p> <p>Hello.java<pre><code>public class Hello {\npublic static void main (String[] args){\nSystem.out.println(\"Hello, World\");\n}\n}\n</code></pre> How much do you think can be found on the web? This is the result of searching for the code. </p>"},{"location":"research/project_ideas/#web-portal-for-orbs","title":"Web Portal for ORBS","text":"<p>In computer programming, program slicing is the computation of the set of programs statements, the program slice, that may affect the values at some point of interest, referred to as a slicing criterion. Program slicing can be used in debugging to locate source of errors more easily. Observation-based slicing (ORBS) is a novel language-independent slicing technique that revives the original spirit of program slicing, that is, remove/delete parts of the program that does not contribute to the point of interest. A potential slice is obtained through repeated deletion which is validated by observing the behaviour of the program: if the slice and original program behave the same under the slicing criterion, the deletion is accepted.</p> <p>This project will gather requirements to release ORBS as a web portal where people can submit their code and later visualise and download slicing information for their systems.</p>"},{"location":"research/project_ideas/#improving-slicing-performance-through-binary-masking","title":"Improving slicing performance through binary masking","text":"<p>Program transformation and automatic re-writing tools play a vital part in research. A tool that allows you to automatically add a mask at each line of code to make the line conditionally executable based on some external environment variable would have many experimental applications in program analysis research. One area where this could be immediately applied to is program slicing, in particular ORBS.</p> <p>This project will develop a program transformation re-writing tool where each line of code can be made conditionally executable based on some external environment variable.</p>"},{"location":"research/project_ideas/#binary-level-orbs-slicing","title":"Binary-level ORBS Slicing","text":"<p>In computer programming, program slicing is the computation of the set of programs statements, the program slice, that may affect the values at some point of interest, referred to as a slicing criterion. Program slicing can be used in debugging to locate source of errors more easily. Observation-based slicing (ORBS) is a novel language-independent slicing technique that revives the original spirit of program slicing, that is, remove/delete parts of the program that does not contribute to the point of interest. A potential slice is obtained through repeated deletion which is validated by observing the behaviour of the program: if the slice and original program behave the same under the slicing criterion, the deletion is accepted.</p> <p>This project will apply the ORBS approach at binary level. For this student will need to identify current binary re-writing techniques and tools and use that in conjunction with ORBS to develop a binary slicer.</p>"},{"location":"research/project_ideas/#software-repository-mining","title":"Software Repository Mining","text":"<p>Open-source code and projects are now in abundance more than before. These repositories (eg. Github, bitbucket etc.) provide wealth of information about actual real-world software development. For example, we can understand how code evolved over time, how bugs that were reported were fixed, what techniques and methodology the software development process followed etc. We can even work to find similarities in the repositories identify a host of code metrics.</p> <p>This project will identify the current tools and technologies available for mining these open software repositories and will look to develop and extend them to allow improved data mining and analysis.</p>"},{"location":"research/project_ideas/#app-store-mining","title":"App Store Mining","text":"<p>The software development domain is always evolving, with new paradigms being continually introduced. Since, the launch of the iPhone in 2007 the concept of smart phones have really taken off. With ~967.78m smart phone sold there is no shortage of application users. The market is dominated by three stores where apps are available for download, namely, Apple Store, Google Play and Blackberry Store. These store have a huge number (~1m) of apps available, often with description and various other information related to the app and in some cases even reviews. They also have a price associated with them. Analysis of this data will allow us to gain an insight into the current software development market and trend.</p> <p>This project will identify the current tools and technologies available for crawling app stores and will look to develop and extend them to allow app store data mining and analysis.</p>"},{"location":"research/project_ideas/#search-based-software-slicing","title":"Search-based Software Slicing","text":"<p>In computer programming, program slicing is the computation of the set of programs statements, the program slice, that may affect the values at some point of interest, referred to as a slicing criterion. Program slicing can be used in debugging to locate source of errors more easily. Current program slicing techniques cannot handle systems written in multiple programming languages. Observation-based slicing (ORBS) is a novel language-independent slicing technique capable of slicing multi-language systems including systems which contain (third party) binary components. A potential slice obtained through repeated statement deletion is validated by observing the behaviour of the program: if the slice and original program behave the same under the slicing criterion, the deletion is accepted.</p> <p>This project will use the ORBS approach to develop a search-based approach to program slicing.</p>"},{"location":"research/project_ideas/#algorithimic-trading","title":"Algorithimic Trading","text":"<p>The Forex Trading market is the largest and the most liquid market in the world with and estimated $5.3 Trillion being traded every single day. This market is rife with automatic trading algorithms that are trading to make a profit.</p> <p>This project will investigate the current approaches and tools available for automatic trading and develop algorithms and tools to support automated trading, with an aim to make profit, of course! The approaches can come from various domains of computing including machine learning and evolutionary algorithms etc.</p>"},{"location":"research/project_ideas/#automated-bug-triage","title":"Automated Bug Triage","text":"<p>Most large software development projects use some form of bug tracker system. Some popular ones are Jira, YouTrack, IBM Rational, Bug-Track, Bugzilla etc. When a new bug report is filed, a human needs to look at the bug report and triage the bug in order to identify whether its an actual bug. The triage process then tries to identify a developer who the bug should be assigned to. Although this approach works pretty well for software companies where the manager does the assignment and is aware of the capabilities of his team, the scenario is very different for open systems.</p> <p>This project will develop tools and support for automatic bug triage and assignment to developers. This would incorporate areas such as data mining, machine learning, search-based optimisation techniques.</p>"},{"location":"research/project_ideas/#automated-assessment","title":"Automated Assessment","text":"<p>Almost all Computer Science related courses taught at universities will have modules where programming languages are taught. In the case of UEL we have courses taught in Java and php. Often, it is helpful if a automated assessment system can be employed to test and grade programming assignments submitted by students.</p> <p>This project will investigate the current tools and software support available for automated assessment of programming assignments and extend support. This is an ideal project for someone who is interested in web application development. If this project is successful we can look towards a live implementation for the department.</p>"},{"location":"research/project_ideas/#software-visualisation","title":"Software Visualisation","text":"<p>Software visualisation helps us see information and understand data very easily. In moder times we can take advantage of HTML5 and progress in browser technology create very useful and attractive visualisations.</p> <p>This project will develop a graph visualiser in support of processing and viewing various data and graphs.</p>"},{"location":"research/project_ideas/#energy-measurement-for-mobile-platforms","title":"Energy Measurement for Mobile Platforms","text":"<p>Traditionally software development has placed a lot of emphasis on functional requirements. However, in modern software systems non-functional requirements play a vital role, for example, for mobile applications it is very important to know the amount of energy consumed by a piece of software. The software on my iPhone will not be of much use if my phone runs out of battery.</p> <p>The goal of the project will be identify the current state-of-the-art in energy measurement and extend support for software and tools to capture data about energy usage for mobile apps. This project is ideal for students who are interested in mobile application development.</p>"},{"location":"research/project_ideas/#energy-measurement-for-cloud","title":"Energy Measurement for Cloud","text":"<p>We are seeing a huge shift in technology and how it is being used by end-users. Almost all applications are making a shift to the cloud. This is no longer true for only services like email but for more traditional applications desktop-based applications such as word processing software. Everyday technologies that we such as Gmail, Dropbox, Office 365 are now all cloud-based. The biggest cost for cloud operators is energy usage.</p> <p>The goal of the project will be identify the current state-of-the-art in energy measurement for desktop and cloud systems and extend support for software and tools to capture energy usage in these systems. This project is ideal for someone who is interested in cloud computing.</p>"},{"location":"research/project_ideas/#smart-scheduling","title":"Smart Scheduling","text":"<p>Job shop scheduling (or job-shop problem) is an optimization problem in computer science and operations research in which ideal jobs are assigned to resources at particular times. The most basic generic version can be simplified to our Timetabling problem. At UEL within the department we schedule modules each semester taking into various constraints. Some of these constraints are:</p> <ul> <li>Ensure lecture/lab/tutorial timings don't clash</li> <li>Ensure individual students timetable don't clash</li> <li>Ensure individual academic timetable don't clash</li> <li>Ensure that students and lectures are not overworked on a particular day</li> <li>Ensure appropriate gaps between sessions for students and lecturers</li> <li>Account for specific lecturer, room and resource constraints</li> </ul> <p>This project will investigate the current practice for timetabling at the department, identify requirements of the proposed system and then develop and deploy a web application to solve the problem.</p>"},{"location":"research/project_ideas/#token-orbs","title":"Token ORBS","text":"<p>In computer programming, program slicing is the computation of the set of programs statements, the program slice, that may affect the values at some point of interest, referred to as a slicing criterion. Program slicing can be used in debugging to locate source of errors more easily. Observation-based slicing (ORBS) is a novel language-independent slicing technique that revives the original spirit of program slicing, that is, remove/delete parts of the program that does not contribute to the point of interest. A potential slice is obtained through repeated deletion which is validated by observing the behaviour of the program: if the slice and original program behave the same under the slicing criterion, the deletion is accepted.</p> <p>This project will investigate how to improve the accuracy of ORBS. This project can take one or both approaches where ORBS remains language-independent or includes language features. For the former, we can look at generic tokenizing of the code text to improve accuracy by removing at token-level rather than line-level. For the latter, we can look at tokenizing language constructs and operating on those.</p>"},{"location":"research/project_ideas/#delta-orbs","title":"Delta ORBS","text":"<p>To be defined...</p>"},{"location":"research/project_ideas/#region-connectivity","title":"Region Connectivity","text":"<p>Computation and visualisation of connectivity between the different regions of the brain is vital for many tasks such as disease identification, drug discovery and disease propagation etc. An effective visualisation can aid clinicians and biologists perform these tasks addressing a genuine research and industrial needs.</p> <p>This project will investigate and develop techniques to identify the connectivity and dispersion paths between various brain regions or similar biological structures.</p>"},{"location":"research/project_ideas/#anti-money-laundering-system","title":"Anti-Money Laundering System","text":"<p>To be defined...</p>"},{"location":"research/research_interest/","title":"Research Interest","text":""},{"location":"research/research_interest/#dependence-analysis","title":"Dependence Analysis","text":"<p>Dependence analysis is a vital part of program analysis and has applications in a wide range of software engineering activities . My research has uncovered the existence of highly inter-dependent clusters (coherent clusters) in production source code and identified reasons for their formation. These clusters have been shown to map directly to program structure, which can aid in program comprehension and understanding, as well as, identifying structural defects in code. Code Metrics &amp; Machine Learning</p> <p>I have done research into identifying unique and useful code metrics for certain applications using principal component analysis. Such analysis helps identify metics that can be used as predictors for code quality and has been successfully used in supervised learning models to predict software faults.</p>"},{"location":"research/research_interest/#dependence-clusters","title":"Dependence Clusters","text":"<p>A dependence cluster is a maximal set of program statements that are mutually inter-dependent. My research has focused on quantitative analysis to show the existence of these clusters in production source code and qualitative study of the underlying reason for their formation. My research has introduced coherent dependence clusters, a specialised form of dependence clusters. These clusters have been shown to map directly to program structure, which can aid in program comprehension and understanding, as well as, identifying structural defects in code.</p>"},{"location":"research/research_interest/#program-slicing","title":"Program Slicing","text":"<p>Current program slicing techniques cannot handle systems written in multiple programming languages. Observation-based slicing (ORBS) is a novel language-independent slicing technique capable of slicing multi-language systems including systems which contain (third party) binary components. A potential slice obtained through repeated statement deletion is validated by observing the behaviour of the program: if the slice and original program behave the same under the slicing criterion, the deletion is accepted. We have developed ORBS to take advantage of the existing build tool chains to achieve observation-based slicing. I have also created a parallel version of ORBS to reduce slicing times and make the entire process usable in practice.</p>"},{"location":"research/research_interest/#software-visualisation","title":"Software Visualisation","text":"<p>As part of my research on clusters, I have also developed a multi-level visualisation tool (deCluVi) for mapping software metrics to program statements using colour and dimension. The visualization is created from System Dependence Graphs and static backward/forward slices extracted from an industry standard static analysis tool called CodeSurfer. The dataset and the tool have been made freely available to other researchers.</p> <p>I am also working on ApiNATOMY a graphical toolkit for knowledge management with particular applications in multi-scale anatomy.</p>"},{"location":"research/research_interest/#search-based-software-engineering-sbse","title":"Search-based Software Engineering (SBSE)","text":"<p>Many software engineering problems are complex and their resolution requires unbounded resources. I am interested in the application of meta-heuristic search techniques and in particular evolutionary algorithms to these complex problems in order to find near-optimal solutions. My research has applied search-based techniques along with supervised machine learning for temporal fault-prediction and also for automatic bug triaging and assignment.</p>"},{"location":"research/visualization/","title":"Visualization","text":""},{"location":"research/visualization/#apinatomy","title":"ApiNATOMY","text":""},{"location":"research/visualization/#overview","title":"Overview","text":"<p>ApiNATOMY is an open source graphical toolkit for interactive knowledge management developed as part of the Open Physiology effort. Within ApiNATOMY, knowledge is visualized in the form of circuitboard schematics, via a platform-independent 4D (i.e. 3D + time) JavaScript environment. While the toolkit per se is generic, our driving use case is the management of knowledge about (i) multiscale anatomy in general, and (ii) routes of physiology communication in particular. A key goal of our effort is to support the open biomedical community to collaborate, share and interact with complex data and models in genomics, physiology, pharmacology and pathology.</p>"},{"location":"research/visualization/#official-website","title":"Official Website","text":"<p>The official website for ApiNATOMY can be found here The development details of ApiNATOMY can be found here</p>"},{"location":"research/visualization/#apinatomy-20","title":"ApiNATOMY 2.0","text":"<p>The ApiNATOMY Toolkit is being extended with additional abilities and have the following components:</p> <ul> <li>Graph Editor</li> <li>Lyph Editor</li> </ul>"}]}